{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": "-- Grafana --",
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "target": {
          "limit": 100,
          "matchAny": false,
          "tags": [],
          "type": "dashboard"
        },
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "gnetId": null,
  "graphTooltip": 0,
  "id": 2,
  "iteration": 1644221490185,
  "links": [],
  "panels": [
    {
      "collapsed": false,
      "datasource": null,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 11,
      "panels": [],
      "title": "Mesuré",
      "type": "row"
    },
    {
      "datasource": null,
      "description": "",
      "gridPos": {
        "h": 9,
        "w": 3,
        "x": 0,
        "y": 1
      },
      "id": 9,
      "options": {
        "content": "# Gazpar\n\n  $pce\n  \n  <img src=\"https://raw.githubusercontent.com/yukulehe/gazpar2mqtt/main/res/gazpar.png\" width=\"60%\">\n\n           ",
        "mode": "markdown"
      },
      "pluginVersion": "8.1.2",
      "targets": [
        {
          "query": "from(bucket: \"gazpar\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"gazpar_informative_measure\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"energy_kWh\")\r\n  |> drop(columns:[\"year\",\"month\",\"pce\",\"pce_alias\",\"_measurement\",\"_field\"])\r\n  |> aggregateWindow(every: 1mo, fn: sum, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "A"
        }
      ],
      "timeFrom": "1y",
      "transparent": true,
      "type": "text"
    },
    {
      "datasource": "${datasource}",
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "max": 5000,
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "#EAB839",
                "value": 500
              },
              {
                "color": "red",
                "value": 2000
              }
            ]
          },
          "unit": "kwatth"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "gas_mcube"
            },
            "properties": [
              {
                "id": "unit",
                "value": "m3"
              },
              {
                "id": "mappings",
                "value": []
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "cost_eur"
            },
            "properties": [
              {
                "id": "unit",
                "value": "€"
              },
              {
                "id": "mappings",
                "value": []
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": "/(Monday)/"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Lundi"
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": "/(Tuesday)/"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Mardi"
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": "/(Wednesday)/"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Mercredi"
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": "/(Thursday)/"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Jeudi"
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": "/(Friday)/"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Vendredi"
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": "/(Saturday)/"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Samedi"
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": "/(Sunday)/"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Dimanche"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 3,
        "w": 2,
        "x": 3,
        "y": 1
      },
      "hideTimeOverride": true,
      "id": 28,
      "options": {
        "colorMode": "none",
        "graphMode": "none",
        "justifyMode": "center",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "text": {},
        "textMode": "value_and_name"
      },
      "pluginVersion": "8.1.2",
      "targets": [
        {
          "query": "import \"date\"\r\nfrom(bucket: \"$bucket\")\r\n  |> range(start: -7d, stop: -6d)\r\n  |> filter(fn: (r) => r[\"pce_alias\"] == \"$pce\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"gazpar_informative_measure\")\r\n  |> filter(fn: (r) => \r\n    if \"$measure_unit\" == \"kWh\" then r[\"_field\"] == \"energy_kWh\"\r\n    else if  \"$measure_unit\" == \"€\" then r[\"_field\"] == \"cost_eur\"  \r\n    else r[\"_field\"] == \"gas_mcube\"\r\n    )\r\n  |> keep(columns:[\"_time\",\"_value\",\"_field\",\"weekday_name\"])\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"actual\")\r\n  ",
          "refId": "A"
        }
      ],
      "timeFrom": null,
      "timeShift": null,
      "title": "J-6",
      "transparent": true,
      "type": "stat"
    },
    {
      "datasource": "${datasource}",
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "max": 5000,
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "#EAB839",
                "value": 500
              },
              {
                "color": "red",
                "value": 2000
              }
            ]
          },
          "unit": "kwatth"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "gas_mcube"
            },
            "properties": [
              {
                "id": "unit",
                "value": "m3"
              },
              {
                "id": "mappings",
                "value": []
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "cost_eur"
            },
            "properties": [
              {
                "id": "unit",
                "value": "€"
              },
              {
                "id": "mappings",
                "value": []
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": "/(Monday)/"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Lundi"
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": "/(Tuesday)/"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Mardi"
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": "/(Wednesday)/"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Mercredi"
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": "/(Thursday)/"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Jeudi"
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": "/(Friday)/"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Vendredi"
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": "/(Saturday)/"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Samedi"
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": "/(Sunday)/"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Dimanche"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 3,
        "w": 2,
        "x": 5,
        "y": 1
      },
      "hideTimeOverride": true,
      "id": 37,
      "options": {
        "colorMode": "none",
        "graphMode": "none",
        "justifyMode": "center",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "text": {},
        "textMode": "value_and_name"
      },
      "pluginVersion": "8.1.2",
      "targets": [
        {
          "query": "import \"date\"\r\nfrom(bucket: \"$bucket\")\r\n  |> range(start: -6d, stop: -5d)\r\n  |> filter(fn: (r) => r[\"pce_alias\"] == \"$pce\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"gazpar_informative_measure\")\r\n  |> filter(fn: (r) => \r\n    if \"$measure_unit\" == \"kWh\" then r[\"_field\"] == \"energy_kWh\"\r\n    else if  \"$measure_unit\" == \"€\" then r[\"_field\"] == \"cost_eur\"  \r\n    else r[\"_field\"] == \"gas_mcube\"\r\n    )\r\n  |> keep(columns:[\"_time\",\"_value\",\"_field\",\"weekday_name\"])\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"actual\")\r\n  ",
          "refId": "A"
        }
      ],
      "timeFrom": null,
      "timeShift": null,
      "title": "J-5",
      "transparent": true,
      "type": "stat"
    },
    {
      "datasource": "${datasource}",
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "max": 5000,
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "#EAB839",
                "value": 500
              },
              {
                "color": "red",
                "value": 2000
              }
            ]
          },
          "unit": "kwatth"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "gas_mcube"
            },
            "properties": [
              {
                "id": "unit",
                "value": "m3"
              },
              {
                "id": "mappings",
                "value": []
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "cost_eur"
            },
            "properties": [
              {
                "id": "unit",
                "value": "€"
              },
              {
                "id": "mappings",
                "value": []
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": "/(Monday)/"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Lundi"
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": "/(Tuesday)/"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Mardi"
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": "/(Wednesday)/"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Mercredi"
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": "/(Thursday)/"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Jeudi"
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": "/(Friday)/"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Vendredi"
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": "/(Saturday)/"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Samedi"
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": "/(Sunday)/"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Dimanche"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 3,
        "w": 2,
        "x": 7,
        "y": 1
      },
      "hideTimeOverride": true,
      "id": 20,
      "options": {
        "colorMode": "none",
        "graphMode": "none",
        "justifyMode": "center",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "text": {},
        "textMode": "value_and_name"
      },
      "pluginVersion": "8.1.2",
      "targets": [
        {
          "query": "import \"date\"\r\nfrom(bucket: \"$bucket\")\r\n  |> range(start: -5d, stop: -4d)\r\n  |> filter(fn: (r) => r[\"pce_alias\"] == \"$pce\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"gazpar_informative_measure\")\r\n  |> filter(fn: (r) => \r\n    if \"$measure_unit\" == \"kWh\" then r[\"_field\"] == \"energy_kWh\"\r\n    else if  \"$measure_unit\" == \"€\" then r[\"_field\"] == \"cost_eur\"  \r\n    else r[\"_field\"] == \"gas_mcube\"\r\n    )\r\n  |> keep(columns:[\"_time\",\"_value\",\"_field\",\"weekday_name\"])\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"actual\")\r\n  ",
          "refId": "A"
        }
      ],
      "timeFrom": null,
      "timeShift": null,
      "title": "J-4",
      "transparent": true,
      "type": "stat"
    },
    {
      "datasource": "${datasource}",
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "max": 5000,
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "#EAB839",
                "value": 500
              },
              {
                "color": "red",
                "value": 2000
              }
            ]
          },
          "unit": "kwatth"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "gas_mcube"
            },
            "properties": [
              {
                "id": "unit",
                "value": "m3"
              },
              {
                "id": "mappings",
                "value": []
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "cost_eur"
            },
            "properties": [
              {
                "id": "unit",
                "value": "€"
              },
              {
                "id": "mappings",
                "value": []
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": "/(Monday)/"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Lundi"
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": "/(Tuesday)/"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Mardi"
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": "/(Wednesday)/"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Mercredi"
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": "/(Thursday)/"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Jeudi"
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": "/(Friday)/"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Vendredi"
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": "/(Saturday)/"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Samedi"
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": "/(Sunday)/"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Dimanche"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 3,
        "w": 2,
        "x": 9,
        "y": 1
      },
      "hideTimeOverride": true,
      "id": 19,
      "options": {
        "colorMode": "none",
        "graphMode": "none",
        "justifyMode": "center",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "text": {},
        "textMode": "value_and_name"
      },
      "pluginVersion": "8.1.2",
      "targets": [
        {
          "query": "import \"date\"\r\nfrom(bucket: \"$bucket\")\r\n  |> range(start: -4d, stop: -3d)\r\n  |> filter(fn: (r) => r[\"pce_alias\"] == \"$pce\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"gazpar_informative_measure\")\r\n  |> filter(fn: (r) => \r\n    if \"$measure_unit\" == \"kWh\" then r[\"_field\"] == \"energy_kWh\"\r\n    else if  \"$measure_unit\" == \"€\" then r[\"_field\"] == \"cost_eur\"  \r\n    else r[\"_field\"] == \"gas_mcube\"\r\n    )\r\n  |> keep(columns:[\"_time\",\"_value\",\"_field\",\"weekday_name\"])\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"actual\")\r\n  ",
          "refId": "A"
        }
      ],
      "timeFrom": "7d",
      "timeShift": null,
      "title": "J-3",
      "transparent": true,
      "type": "stat"
    },
    {
      "datasource": "${datasource}",
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "max": 5000,
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "#EAB839",
                "value": 500
              },
              {
                "color": "red",
                "value": 2000
              }
            ]
          },
          "unit": "kwatth"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "gas_mcube"
            },
            "properties": [
              {
                "id": "unit",
                "value": "m3"
              },
              {
                "id": "mappings",
                "value": []
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "cost_eur"
            },
            "properties": [
              {
                "id": "unit",
                "value": "€"
              },
              {
                "id": "mappings",
                "value": []
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": "/(Monday)/"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Lundi"
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": "/(Tuesday)/"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Mardi"
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": "/(Wednesday)/"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Mercredi"
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": "/(Thursday)/"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Jeudi"
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": "/(Friday)/"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Vendredi"
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": "/(Saturday)/"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Samedi"
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": "/(Sunday)/"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Dimanche"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 3,
        "w": 2,
        "x": 11,
        "y": 1
      },
      "hideTimeOverride": true,
      "id": 18,
      "options": {
        "colorMode": "none",
        "graphMode": "none",
        "justifyMode": "center",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "text": {},
        "textMode": "value_and_name"
      },
      "pluginVersion": "8.1.2",
      "targets": [
        {
          "query": "import \"date\"\r\nfrom(bucket: \"$bucket\")\r\n  |> range(start: -3d, stop: -2d)\r\n  |> filter(fn: (r) => r[\"pce_alias\"] == \"$pce\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"gazpar_informative_measure\")\r\n  |> filter(fn: (r) => \r\n    if \"$measure_unit\" == \"kWh\" then r[\"_field\"] == \"energy_kWh\"\r\n    else if  \"$measure_unit\" == \"€\" then r[\"_field\"] == \"cost_eur\"  \r\n    else r[\"_field\"] == \"gas_mcube\"\r\n    )\r\n  |> keep(columns:[\"_time\",\"_value\",\"_field\",\"weekday_name\"])\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"actual\")\r\n  ",
          "refId": "A"
        }
      ],
      "timeFrom": null,
      "timeShift": null,
      "title": "J-2",
      "transparent": true,
      "type": "stat"
    },
    {
      "datasource": "${datasource}",
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "dark-yellow",
            "mode": "fixed"
          },
          "mappings": [],
          "max": 5000,
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "#EAB839",
                "value": 500
              },
              {
                "color": "red",
                "value": 2000
              }
            ]
          },
          "unit": "kwatth"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "gas_mcube"
            },
            "properties": [
              {
                "id": "unit",
                "value": "m3"
              },
              {
                "id": "mappings",
                "value": []
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "cost_eur"
            },
            "properties": [
              {
                "id": "unit",
                "value": "€"
              },
              {
                "id": "mappings",
                "value": []
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": "/(Monday)/"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Lundi"
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": "/(Tuesday)/"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Mardi"
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": "/(Wednesday)/"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Mercredi"
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": "/(Thursday)/"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Jeudi"
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": "/(Friday)/"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Vendredi"
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": "/(Saturday)/"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Samedi"
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": "/(Sunday)/"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Dimanche"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 3,
        "w": 2,
        "x": 13,
        "y": 1
      },
      "hideTimeOverride": true,
      "id": 17,
      "options": {
        "colorMode": "none",
        "graphMode": "none",
        "justifyMode": "center",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "text": {},
        "textMode": "value_and_name"
      },
      "pluginVersion": "8.1.2",
      "targets": [
        {
          "query": "import \"date\"\r\nfrom(bucket: \"$bucket\")\r\n  |> range(start: -2d, stop: -1d)\r\n  |> filter(fn: (r) => r[\"pce_alias\"] == \"$pce\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"gazpar_informative_measure\")\r\n  |> filter(fn: (r) => \r\n    if \"$measure_unit\" == \"kWh\" then r[\"_field\"] == \"energy_kWh\"\r\n    else if  \"$measure_unit\" == \"€\" then r[\"_field\"] == \"cost_eur\"  \r\n    else r[\"_field\"] == \"gas_mcube\"\r\n    )\r\n  |> keep(columns:[\"_time\",\"_value\",\"_field\",\"weekday_name\"])\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"actual\")\r\n  ",
          "refId": "A"
        }
      ],
      "timeFrom": null,
      "timeShift": null,
      "title": "J-1",
      "transparent": true,
      "type": "stat"
    },
    {
      "datasource": "${datasource}",
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "dark-yellow",
            "mode": "fixed"
          },
          "mappings": [],
          "max": 5000,
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "kwatth"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "gas_mcube"
            },
            "properties": [
              {
                "id": "unit",
                "value": "m3"
              },
              {
                "id": "mappings",
                "value": []
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "cost_eur"
            },
            "properties": [
              {
                "id": "unit",
                "value": "€"
              },
              {
                "id": "mappings",
                "value": []
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": "/(Jan)/"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Janvier"
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": "/(Feb)/"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Février"
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": "/(Mar)/"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Mars"
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": "/(Apr)/"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Avril"
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": "/(May)/"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "May"
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": "/(Jun)/"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Juin"
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": "/(Jul)/"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Juillet"
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": "/(Aug)/"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Août"
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": "/(Sep)/"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Septembre"
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": "/(Oct)/"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Octobre"
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": "/(Nov)/"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Novembre"
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": "/(Dec)/"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Decembre"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 3,
        "w": 3,
        "x": 3,
        "y": 4
      },
      "hideTimeOverride": true,
      "id": 7,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "center",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "text": {},
        "textMode": "value_and_name"
      },
      "pluginVersion": "8.1.2",
      "targets": [
        {
          "query": "import \"date\"\r\n\r\nfrom(bucket: \"$bucket\")\r\n  |> range(start: -3mo, stop: -1d)\r\n  |> filter(fn: (r) => r[\"month\"] == string(v: date.month(t: -1d)))\r\n  |> filter(fn: (r) => r[\"pce_alias\"] == \"$pce\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"gazpar_informative_measure\")\r\n  |> filter(fn: (r) => \r\n    if \"$measure_unit\" == \"kWh\" then r[\"_field\"] == \"energy_kWh\"\r\n    else if  \"$measure_unit\" == \"€\" then r[\"_field\"] == \"cost_eur\"  \r\n    else r[\"_field\"] == \"gas_mcube\"\r\n    )\r\n  |> drop(columns:[\"year\",\"weekday_name\",\"weekday_no\",\"pce\",\"pce_alias\",\"month\",\"_measurement\",\"type\"])\r\n  |> aggregateWindow(every: 1mo, fn: sum, createEmpty: false)\r\n  |> yield(name: \"sum\")",
          "refId": "A"
        }
      ],
      "timeFrom": null,
      "transparent": true,
      "type": "stat"
    },
    {
      "datasource": "${datasource}",
      "description": "Tendance par rapport au mois passé sur la même période",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "green",
                "value": -100
              },
              {
                "color": "red",
                "value": 0
              }
            ]
          },
          "unit": "%"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 3,
        "w": 2,
        "x": 6,
        "y": 4
      },
      "hideTimeOverride": true,
      "id": 34,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "center",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "text": {},
        "textMode": "value"
      },
      "pluginVersion": "8.1.2",
      "targets": [
        {
          "query": "import \"date\"\r\n\r\n// Get last measure date of the current month\r\nyesterday = date.truncate(t: -1d, unit: 1d)\r\nyesterday_m1 = date.truncate(t: -1mo, unit: 1d)\r\n\r\n// Get data\r\ndata = from(bucket: \"$bucket\")\r\n  |> range(start: -2mo, stop: -0mo)\r\n  |> filter(fn: (r) => r[\"pce_alias\"] == \"$pce\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"gazpar_informative_measure\")\r\n  |> filter(fn: (r) => \r\n    if \"$measure_unit\" == \"kWh\" then r[\"_field\"] == \"energy_kWh\"\r\n    else if  \"$measure_unit\" == \"€\" then r[\"_field\"] == \"cost_eur\"  \r\n    else r[\"_field\"] == \"gas_mcube\"\r\n    )\r\n  |> drop(columns:[\"year\",\"weekday_name\",\"month_name\",\"weekday_no\",\"pce\",\"pce_alias\",\"_measurement\",\"type\"])\r\n  |> group()\r\n\r\n// Set dataset based on current month\r\nm0 = data\r\n  |> filter(fn: (r) => r[\"month\"] == string(v: date.month(t: yesterday)))\r\n  |> aggregateWindow(every: 1mo, fn: sum, createEmpty: false)\r\n  |> map(fn: (r) => ({ r with m0: r._value }))\r\n  |> map(fn: (r) => ({ r with key: \"A\" }))\r\n  |> keep(columns:[\"m0\",\"key\"])\r\n  //|> yield(name: \"current\")\r\n\r\n// Set dataset based on previous month\r\nm1 = data\r\n  |> range(start: -2mo, stop: yesterday_m1)\r\n  |> filter(fn: (r) => r[\"month\"] == string(v: date.month(t: yesterday_m1)))\r\n  |> aggregateWindow(every: 1mo, fn: sum, createEmpty: false)\r\n  |> map(fn: (r) => ({ r with m1: r._value }))\r\n  |> map(fn: (r) => ({ r with key: \"A\" }))\r\n  |> keep(columns:[\"m1\",\"key\"])\r\n  //|> yield(name: \"previous\")\r\n\r\n// Join datasets and calculate percentage\r\njoin(\r\n  tables: {m1: m1, m0: m0},\r\n  on: [\"key\"],\r\n  method: \"inner\"\r\n)\r\n|> map(fn: (r) => ({ r with \r\n  trend:  \r\n  if not exists r[\"m1\"] or r[\"m1\"] == 0.0 then 0.0\r\n  else ((r[\"m0\"]-r[\"m1\"]) / r[\"m1\"] )*100.0\r\n  }))\r\n|> keep(columns:[\"trend\"])\r\n|> yield(name: \"trend\")",
          "refId": "A"
        }
      ],
      "timeFrom": null,
      "title": "Tendance",
      "transformations": [],
      "transparent": true,
      "type": "stat"
    },
    {
      "datasource": "${datasource}",
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "dark-yellow",
            "mode": "fixed"
          },
          "displayName": "${__field.labels.year}",
          "mappings": [],
          "max": 5000,
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "kwatth"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "gas_mcube"
            },
            "properties": [
              {
                "id": "unit",
                "value": "m3"
              },
              {
                "id": "mappings",
                "value": []
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "cost_eur"
            },
            "properties": [
              {
                "id": "unit",
                "value": "€"
              },
              {
                "id": "mappings",
                "value": []
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 3,
        "w": 3,
        "x": 8,
        "y": 4
      },
      "hideTimeOverride": true,
      "id": 24,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "center",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "text": {},
        "textMode": "value_and_name"
      },
      "pluginVersion": "8.1.2",
      "targets": [
        {
          "query": "import \"date\"\r\n\r\nfrom(bucket: \"$bucket\")\r\n  |> range(start: -13mo, stop: -1d)\r\n  |> filter(fn: (r) => r[\"year\"] == string(v: date.year(t: -1d)))\r\n  |> filter(fn: (r) => r[\"pce_alias\"] == \"$pce\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"gazpar_informative_measure\")\r\n  |> filter(fn: (r) => \r\n    if \"$measure_unit\" == \"kWh\" then r[\"_field\"] == \"energy_kWh\"\r\n    else if  \"$measure_unit\" == \"€\" then r[\"_field\"] == \"cost_eur\"  \r\n    else r[\"_field\"] == \"gas_mcube\"\r\n    )\r\n  |> drop(columns:[\"weekday_name\",\"weekday_no\",\"month_name\",\"pce\",\"pce_alias\",\"month\",\"_measurement\",\"type\"])\r\n  |> aggregateWindow(every: 1y, fn: sum, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "A"
        }
      ],
      "timeFrom": null,
      "transparent": true,
      "type": "stat"
    },
    {
      "datasource": "${datasource}",
      "description": "Tendance par rapport à l'année dernière sur la même période",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "green",
                "value": -100
              },
              {
                "color": "red",
                "value": 0
              }
            ]
          },
          "unit": "%"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 3,
        "w": 2,
        "x": 11,
        "y": 4
      },
      "hideTimeOverride": true,
      "id": 36,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "center",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "text": {},
        "textMode": "value"
      },
      "pluginVersion": "8.1.2",
      "targets": [
        {
          "query": "import \"date\"\r\n\r\n// Get last measure date of the current month\r\nyesterday = date.truncate(t: -1d, unit: 1d)\r\nyesterday_m1 = date.truncate(t: -1y, unit: 1d)\r\n\r\n// Get data\r\ndata = from(bucket: \"$bucket\")\r\n  |> range(start: -2y, stop: -0mo)\r\n  |> filter(fn: (r) => r[\"pce_alias\"] == \"$pce\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"gazpar_informative_measure\")\r\n  |> filter(fn: (r) => \r\n    if \"$measure_unit\" == \"kWh\" then r[\"_field\"] == \"energy_kWh\"\r\n    else if  \"$measure_unit\" == \"€\" then r[\"_field\"] == \"cost_eur\"  \r\n    else r[\"_field\"] == \"gas_mcube\"\r\n    )\r\n  |> drop(columns:[\"month\",\"weekday_name\",\"month_name\",\"weekday_no\",\"pce\",\"pce_alias\",\"_measurement\",\"type\"])\r\n  |> group()\r\n\r\n// Set dataset based on current year\r\nm0 = data\r\n  |> filter(fn: (r) => r[\"year\"] == string(v: date.year(t: yesterday)))\r\n  |> aggregateWindow(every: 1y, fn: sum, createEmpty: false)\r\n  |> map(fn: (r) => ({ r with m0: r._value }))\r\n  |> map(fn: (r) => ({ r with key: \"A\" }))\r\n  |> keep(columns:[\"m0\",\"key\"])\r\n  //|> yield(name: \"current\")\r\n\r\n// Set dataset based on previous year\r\nm1 = data\r\n  |> range(start: -2y, stop: yesterday_m1)\r\n  |> filter(fn: (r) => r[\"year\"] == string(v: date.year(t: yesterday_m1)))\r\n  |> aggregateWindow(every: 1y, fn: sum, createEmpty: false)\r\n  |> map(fn: (r) => ({ r with m1: r._value }))\r\n  |> map(fn: (r) => ({ r with key: \"A\" }))\r\n  |> keep(columns:[\"m1\",\"key\"])\r\n  //|> yield(name: \"previous\")\r\n\r\n// Join datasets and calculate percentage\r\njoin(\r\n  tables: {m1: m1, m0: m0},\r\n  on: [\"key\"],\r\n  method: \"inner\"\r\n)\r\n|> map(fn: (r) => ({ r with \r\n  trend:  \r\n  if not exists r[\"m1\"] or r[\"m1\"] == 0.0 then 0.0\r\n  else ((r[\"m0\"]-r[\"m1\"]) / r[\"m1\"] )*100.0\r\n  }))\r\n|> keep(columns:[\"trend\"])\r\n|> yield(name: \"trend\")",
          "refId": "A"
        }
      ],
      "timeFrom": null,
      "title": "Tendance",
      "transformations": [],
      "transparent": true,
      "type": "stat"
    },
    {
      "datasource": "${datasource}",
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "semi-dark-blue",
            "mode": "fixed"
          },
          "mappings": [],
          "max": 5000,
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "#EAB839",
                "value": 500
              },
              {
                "color": "red",
                "value": 2000
              }
            ]
          },
          "unit": "€"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 3,
        "w": 3,
        "x": 13,
        "y": 4
      },
      "hideTimeOverride": true,
      "id": 38,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "center",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "text": {},
        "textMode": "value"
      },
      "pluginVersion": "8.1.2",
      "targets": [
        {
          "query": "from(bucket: \"$bucket\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"pce_alias\"] == \"$pce\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"gazpar_price_measure\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"price_fix_eur\")\r\n  |> keep(columns:[\"_time\",\"_value\",\"_field\"])\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"days\")\r\n  ",
          "refId": "A"
        }
      ],
      "timeFrom": null,
      "timeShift": null,
      "title": "Prix fixe journalier",
      "transparent": true,
      "type": "stat"
    },
    {
      "datasource": "${datasource}",
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "max": 5000,
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "kwatth"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "gas_mcube"
            },
            "properties": [
              {
                "id": "unit",
                "value": "m3"
              },
              {
                "id": "mappings",
                "value": []
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "cost_eur"
            },
            "properties": [
              {
                "id": "unit",
                "value": "€"
              },
              {
                "id": "mappings",
                "value": []
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": "/(Jan)/"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Janvier"
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": "/(Feb)/"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Février"
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": "/(Mar)/"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Mars"
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": "/(Apr)/"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Avril"
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": "/(May)/"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "May"
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": "/(Jun)/"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Juin"
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": "/(Jul)/"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Juillet"
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": "/(Aug)/"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Août"
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": "/(Sep)/"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Septembre"
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": "/(Oct)/"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Octobre"
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": "/(Nov)/"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Novembre"
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": "/(Dec)/"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Decembre"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 3,
        "w": 3,
        "x": 3,
        "y": 7
      },
      "hideTimeOverride": true,
      "id": 23,
      "options": {
        "colorMode": "none",
        "graphMode": "none",
        "justifyMode": "center",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "text": {},
        "textMode": "value_and_name"
      },
      "pluginVersion": "8.1.2",
      "targets": [
        {
          "query": "import \"date\"\r\n\r\nfrom(bucket: \"$bucket\")\r\n  |> range(start: -6mo, stop: -0mo)\r\n  |> filter(fn: (r) => r[\"month\"] == string(v: date.month(t: -1mo)))\r\n  |> filter(fn: (r) => r[\"pce_alias\"] == \"$pce\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"gazpar_informative_measure\")\r\n  |> filter(fn: (r) => \r\n    if \"$measure_unit\" == \"kWh\" then r[\"_field\"] == \"energy_kWh\"\r\n    else if  \"$measure_unit\" == \"€\" then r[\"_field\"] == \"cost_eur\"  \r\n    else r[\"_field\"] == \"gas_mcube\"\r\n    )\r\n  |> drop(columns:[\"year\",\"weekday_name\",\"weekday_no\",\"month\",\"pce\",\"pce_alias\",\"_measurement\",\"type\"])\r\n  |> aggregateWindow(every: 1mo, fn: sum, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "A"
        }
      ],
      "timeFrom": null,
      "transparent": true,
      "type": "stat"
    },
    {
      "datasource": "${datasource}",
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "displayName": "${__field.labels.year}",
          "mappings": [],
          "max": 5000,
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "kwatth"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "gas_mcube"
            },
            "properties": [
              {
                "id": "unit",
                "value": "m3"
              },
              {
                "id": "mappings",
                "value": []
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "cost_eur"
            },
            "properties": [
              {
                "id": "unit",
                "value": "€"
              },
              {
                "id": "mappings",
                "value": []
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 3,
        "w": 3,
        "x": 8,
        "y": 7
      },
      "hideTimeOverride": true,
      "id": 25,
      "options": {
        "colorMode": "none",
        "graphMode": "none",
        "justifyMode": "center",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "text": {},
        "textMode": "value_and_name"
      },
      "pluginVersion": "8.1.2",
      "targets": [
        {
          "query": "import \"date\"\r\n\r\nfrom(bucket: \"$bucket\")\r\n  |> range(start: -2y, stop: -1d)\r\n  |> filter(fn: (r) => r[\"year\"] == string(v: date.year(t: -1y)))\r\n  |> filter(fn: (r) => r[\"pce_alias\"] == \"$pce\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"gazpar_informative_measure\")\r\n  |> filter(fn: (r) => \r\n    if \"$measure_unit\" == \"kWh\" then r[\"_field\"] == \"energy_kWh\"\r\n    else if  \"$measure_unit\" == \"€\" then r[\"_field\"] == \"cost_eur\"  \r\n    else r[\"_field\"] == \"gas_mcube\"\r\n    )\r\n  |> drop(columns:[\"weekday_name\",\"weekday_no\",\"month_name\",\"pce\",\"pce_alias\",\"month\",\"_measurement\",\"type\"])\r\n  |> aggregateWindow(every: 1y, fn: sum, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "A"
        }
      ],
      "timeFrom": null,
      "transparent": true,
      "type": "stat"
    },
    {
      "datasource": "${datasource}",
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "semi-dark-blue",
            "mode": "fixed"
          },
          "mappings": [],
          "max": 5000,
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "#EAB839",
                "value": 500
              },
              {
                "color": "red",
                "value": 2000
              }
            ]
          },
          "unit": "€"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 3,
        "w": 3,
        "x": 13,
        "y": 7
      },
      "hideTimeOverride": true,
      "id": 39,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "center",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "text": {},
        "textMode": "value"
      },
      "pluginVersion": "8.1.2",
      "targets": [
        {
          "query": "from(bucket: \"$bucket\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"pce_alias\"] == \"$pce\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"gazpar_price_measure\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"price_kwh_eur\")\r\n  |> keep(columns:[\"_time\",\"_value\",\"_field\"])\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"days\")\r\n  ",
          "refId": "A"
        }
      ],
      "timeFrom": null,
      "timeShift": null,
      "title": "Prix au kWh",
      "transparent": true,
      "type": "stat"
    },
    {
      "datasource": "${datasource}",
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "dark-yellow",
            "mode": "continuous-BlYlRd",
            "seriesBy": "last"
          },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "bars",
            "fillOpacity": 37,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 0,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "kwatth"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "gas_mcube"
            },
            "properties": [
              {
                "id": "unit",
                "value": "m3"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "cost_eur"
            },
            "properties": [
              {
                "id": "unit",
                "value": "€"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 6,
        "w": 16,
        "x": 0,
        "y": 10
      },
      "hideTimeOverride": true,
      "id": 33,
      "options": {
        "legend": {
          "calcs": [
            "min",
            "max",
            "mean"
          ],
          "displayMode": "hidden",
          "placement": "bottom"
        },
        "tooltip": {
          "mode": "single"
        }
      },
      "pluginVersion": "8.1.2",
      "targets": [
        {
          "query": "data = from(bucket: \"$bucket\")\r\n  |> range(start: -1mo, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"pce_alias\"] == \"$pce\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"gazpar_informative_measure\")\r\n  |> filter(fn: (r) => \r\n    if \"$measure_unit\" == \"kWh\" then r[\"_field\"] == \"energy_kWh\"\r\n    else if  \"$measure_unit\" == \"€\" then r[\"_field\"] == \"cost_eur\"  \r\n    else r[\"_field\"] == \"gas_mcube\"\r\n    )\r\n  |> keep(columns:[\"_time\",\"_value\",\"_field\"])\r\n  |> aggregateWindow(every: 1d, fn: last, createEmpty: false)\r\n  |> timeShift(duration: -1d, columns: [\"_time\"])\r\n  |> yield(name: \"data\")\r\n  \r\n\r\nminData = data\r\n|> min()\r\n|> yield(name: \"min\")\r\n\r\n\r\nmaxData = data\r\n|> max()\r\n|> yield(name: \"max\")\r\n",
          "refId": "A"
        }
      ],
      "timeFrom": "30d",
      "timeShift": null,
      "title": "Consommation journalière (30 derniers jours)",
      "transformations": [],
      "transparent": true,
      "type": "timeseries"
    },
    {
      "collapsed": false,
      "datasource": null,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 16
      },
      "id": 13,
      "panels": [],
      "title": "Analyse",
      "type": "row"
    },
    {
      "datasource": "${datasource}",
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "dark-yellow",
            "mode": "fixed",
            "seriesBy": "last"
          },
          "custom": {
            "axisLabel": "Energie",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 15,
            "gradientMode": "opacity",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "smooth",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": true,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "decimals": 1,
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "transparent",
                "value": null
              }
            ]
          },
          "unit": "kwatth"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "cost_eur"
            },
            "properties": [
              {
                "id": "custom.drawStyle",
                "value": "bars"
              },
              {
                "id": "unit",
                "value": "€"
              },
              {
                "id": "color",
                "value": {
                  "fixedColor": "dark-green",
                  "mode": "fixed"
                }
              },
              {
                "id": "custom.fillOpacity",
                "value": 57
              },
              {
                "id": "displayName",
                "value": "Coût"
              },
              {
                "id": "custom.axisLabel",
                "value": "Coût"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "energy_kWh thresold"
            },
            "properties": [
              {
                "id": "custom.lineStyle",
                "value": {
                  "dash": [
                    0,
                    10
                  ],
                  "fill": "dot"
                }
              },
              {
                "id": "custom.showPoints",
                "value": "never"
              },
              {
                "id": "color",
                "value": {
                  "fixedColor": "dark-red",
                  "mode": "fixed"
                }
              },
              {
                "id": "displayName",
                "value": "Seuil"
              },
              {
                "id": "custom.lineWidth",
                "value": 2
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "energy_kWh informative"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Mesuré"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 9,
        "w": 16,
        "x": 0,
        "y": 17
      },
      "hideTimeOverride": true,
      "id": 35,
      "options": {
        "legend": {
          "calcs": [
            "last"
          ],
          "displayMode": "list",
          "placement": "bottom"
        },
        "tooltip": {
          "mode": "single"
        }
      },
      "targets": [
        {
          "query": "from(bucket: \"$bucket\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"pce_alias\"] == \"$pce\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"gazpar_informative_measure\" or r[\"_measurement\"] == \"gazpar_thresold_measure\" )\r\n  |> filter(fn: (r) => r[\"_field\"] == \"energy_kWh\" or r[\"_field\"] == \"cost_eur\")\r\n  |> drop(columns:[\"month\",\"year\",\"weekday_no\",\"weekday_name\",\"pce\",\"pce_alias\",\"month_name\",\"_measurement\"])\r\n  |> aggregateWindow(every: 1mo, fn: sum, createEmpty: false)\r\n  |> timeShift(duration: -1mo, columns: [\"_time\"])\r\n  |> yield(name: \"sum\")\r\n  ",
          "refId": "A"
        }
      ],
      "timeFrom": null,
      "timeShift": null,
      "title": "Consommation (kwh) et coût (€) par mois",
      "transparent": true,
      "type": "timeseries"
    }
  ],
  "refresh": "",
  "schemaVersion": 30,
  "style": "dark",
  "tags": [],
  "templating": {
    "list": [
      {
        "current": {
          "selected": false,
          "text": "InfluxDB",
          "value": "InfluxDB"
        },
        "description": null,
        "error": null,
        "hide": 0,
        "includeAll": false,
        "label": "Datasource",
        "multi": false,
        "name": "datasource",
        "options": [],
        "query": "influxdb",
        "queryValue": "",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "type": "datasource"
      },
      {
        "allValue": null,
        "current": {
          "selected": false,
          "text": "gazpar",
          "value": "gazpar"
        },
        "datasource": "${datasource}",
        "definition": "buckets()",
        "description": null,
        "error": null,
        "hide": 0,
        "includeAll": false,
        "label": "Bucket",
        "multi": false,
        "name": "bucket",
        "options": [],
        "query": "buckets()",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      },
      {
        "allValue": null,
        "current": {
          "selected": false,
          "text": "Maison",
          "value": "Maison"
        },
        "datasource": "${datasource}",
        "definition": "import \"date\"\r\nfrom(bucket: \"$bucket\")\r\n  |> range(start: v.timeRangeStart, stop: 1d)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"gazpar_pce_measure\")\r\n  |> keep(columns:[\"pce_alias\"])\r\n  |> group()",
        "description": null,
        "error": null,
        "hide": 0,
        "includeAll": false,
        "label": "PCE",
        "multi": false,
        "name": "pce",
        "options": [],
        "query": "import \"date\"\r\nfrom(bucket: \"$bucket\")\r\n  |> range(start: v.timeRangeStart, stop: 1d)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"gazpar_pce_measure\")\r\n  |> keep(columns:[\"pce_alias\"])\r\n  |> group()",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      },
      {
        "allValue": null,
        "current": {
          "selected": false,
          "text": "€",
          "value": "€"
        },
        "description": "Unité du relevé",
        "error": null,
        "hide": 0,
        "includeAll": false,
        "label": "Unité",
        "multi": false,
        "name": "measure_unit",
        "options": [
          {
            "selected": false,
            "text": "M3",
            "value": "M3"
          },
          {
            "selected": false,
            "text": "kWh",
            "value": "kWh"
          },
          {
            "selected": true,
            "text": "€",
            "value": "€"
          }
        ],
        "query": "M3,kWh,€",
        "queryValue": "",
        "skipUrlSync": false,
        "type": "custom"
      },
      {
        "allValue": null,
        "current": {
          "selected": false,
          "text": "Active",
          "value": "Active"
        },
        "datasource": "${datasource}",
        "definition": "import \"date\"\r\nfrom(bucket: \"$bucket\")\r\n  |> range(start: v.timeRangeStart, stop: 1d)\r\n  |> filter(fn: (r) => r[\"pce_alias\"] == \"$pce\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"gazpar_pce_measure\")\r\n  |> keep(columns:[\"state\"])\r\n  |> group()",
        "description": null,
        "error": null,
        "hide": 2,
        "includeAll": false,
        "label": "Etat",
        "multi": false,
        "name": "state",
        "options": [],
        "query": "import \"date\"\r\nfrom(bucket: \"$bucket\")\r\n  |> range(start: v.timeRangeStart, stop: 1d)\r\n  |> filter(fn: (r) => r[\"pce_alias\"] == \"$pce\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"gazpar_pce_measure\")\r\n  |> keep(columns:[\"state\"])\r\n  |> group()",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      },
      {
        "allValue": null,
        "current": {
          "selected": false,
          "text": "2019-09-08 21:24:53",
          "value": "2019-09-08 21:24:53"
        },
        "datasource": "${datasource}",
        "definition": "import \"date\"\r\nfrom(bucket: \"$bucket\")\r\n  |> range(start: v.timeRangeStart, stop: 1d)\r\n  |> filter(fn: (r) => r[\"pce_alias\"] == \"$pce\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"gazpar_pce_measure\")\r\n  |> keep(columns:[\"activation_date\"])\r\n  |> group()",
        "description": null,
        "error": null,
        "hide": 2,
        "includeAll": false,
        "label": "Date activation",
        "multi": false,
        "name": "activation_date",
        "options": [],
        "query": "import \"date\"\r\nfrom(bucket: \"$bucket\")\r\n  |> range(start: v.timeRangeStart, stop: 1d)\r\n  |> filter(fn: (r) => r[\"pce_alias\"] == \"$pce\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"gazpar_pce_measure\")\r\n  |> keep(columns:[\"activation_date\"])\r\n  |> group()",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      }
    ]
  },
  "time": {
    "from": "now-2y",
    "to": "now+1y"
  },
  "timepicker": {
    "hidden": false
  },
  "timezone": "browser",
  "title": "Gaz",
  "uid": "5tpNcjA7k",
  "version": 367
}
